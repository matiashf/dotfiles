#!/usr/bin/env bash

protectmaster="$(git config --bool hooks.protectmaster || echo true)"
branch="$(git rev-parse --abbrev-ref HEAD 2>/dev/null)"

set -e

if test "$(git remote)" &&
   test "$protectmaster" != "false" &&
   test "$branch" = "master"
then
  cat <<\EOF
Error: Trying to commit to a protected branch

The master branch is protected, and you should not commit directly to it.
Instead, you should create a feature branch:

  git checkout -b my-feature

If the master branch is not actually protected upstream, you can disable
branch protection locally by running:

  git config hooks.protectmaster false
EOF
	exit 1
fi
